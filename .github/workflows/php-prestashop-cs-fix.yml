name: Prestashop PHP CS Fix

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

env:
  CONFIG_USERNAME: ${{ github.repository }}
  CONFIG_EMAIL: github-actions[bot]@users.noreply.github.com
  TEMP_BRANCH_NAME: php-cs-fix
  MASTER_BRANCH_NAME: ${{ github.ref_name }}
  COMMIT_MESSAGE: Automated deployment
  PULL_TITLE: Automated deployment
  PULL_BODY: Update PHP CS Fix Files
  ASSIGNEE: ${{ github.repository_owner }}
  REVIEWER: ${{ github.repository_owner }}

jobs:
  dependabot:
    permissions:
      pull-requests: write
      contents: write

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Create Blank composer.json
      run: echo '{"name":"prestashop/phpcs","description":"Test","license":"MIT","autoload":{"psr-4":{"Prestashop\\\\Phpcs\\\\":"src/"}},"authors":[{"name":"Anant","email":"anantnegi8@gmail.com"}],"require":{}}' > composer.json
      
    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
      
    - name: Install PHP CS Fixer BundleTools
      run: |
        mkdir -p tools/php-cs-fixer
        composer require --working-dir=tools/php-cs-fixer friendsofphp/php-cs-fixer
    - name: Run PHP-CS
      run: tools/php-cs-fixer/vendor/bin/php-cs-fixer fix ./
    
    - name: Check for File changes
      id: verify_diff
      run: |
        git diff --quiet . || echo "changed=true" >> $GITHUB_OUTPUT    
    - name: Deleting Previous Branches
      if: steps.verify_diff.outputs.changed == 'true'
      run: |
        git branch -D ${{ env.TEMP_BRANCH_NAME }} || echo
        git push -d origin ${{ env.TEMP_BRANCH_NAME }} || echo
    - name: Setting Branch to Temp Branch Name
      if: steps.verify_diff.outputs.changed == 'true'
      run: |
        git checkout -b ${{ env.TEMP_BRANCH_NAME }}
    # Commits all changed files to the repository
    - name: Committing
      if: steps.verify_diff.outputs.changed == 'true'
      run: |
        git config --global user.name "${{ env.CONFIG_USERNAME }}"
        git config --global user.email "${{ env.CONFIG_EMAIL }}"
        git add .
        # "echo" returns true so the build succeeds, even if no changed files
        git commit -m "${{ env.COMMIT_MESSAGE }}"
    - name: Push Commit
      if: steps.verify_diff.outputs.changed == 'true'
      id: checkout
      run: |
        git push -u origin ${{ env.TEMP_BRANCH_NAME }}        
    - name: Merging
      if: steps.verify_diff.outputs.changed == 'true'
      run: |
        git checkout ${{ env.MASTER_BRANCH_NAME }}
        gh repo set-default ${{ env.CONFIG_USERNAME }}
        gh pr create --base ${{ env.MASTER_BRANCH_NAME }} --head ${{ env.TEMP_BRANCH_NAME }} --title "${{ env.PULL_TITLE }}" --body "${{ env.PULL_BODY }}" --reviewer ${{ env.ASSIGNEE }} --assignee ${{ env.REVIEWER }}
        gh pr merge ${{ env.TEMP_BRANCH_NAME }} -m --auto | echo
        gh pr review ${{ env.TEMP_BRANCH_NAME }} --approve | echo
      env:
        GH_TOKEN: ${{ github.token }}
